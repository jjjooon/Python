Python 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
a = 10
~a+1
-10
a = -10
~a+1
10
a = -12345
~a+1
12345
~a+1 # 2의 보수 = 1의 보수(어떤수에 ~을 붙인것) + 1
12345
~(-12345)+1
12345
#비트 부정 연산자(또는 보수 연산자) : 두 수를 연산하는 것이 아니라, 하나만 가지고 각 비트를 반대로 만드는 연산 
#반전된 값을 1의 보수라 하고, 그 값에 1을 더한 값을 2의 보수라고 한다. 
#해당 값의 음수(-)값을 찾고자 할 때 사용
#정수값에 비트 부정을 수행한 후 1을 더하면 해당 값의 음수값을 얻는 코드
a = 10
a << 1
20
a << 2
40
a << 3
80
a << 4
160
#왼쪽 시프트 연산자 : 왼쪽으로 시프트할 때마다 2의n승을 곱한 효과
a = 10
a >> 1
5
a >> 2
2
a >> 3
1
a >> 4
0
#오른쪽 시프트 연산자 : 오른쪽으로 시프트할 때마다 2의n승으로 나눈 몫의 효과